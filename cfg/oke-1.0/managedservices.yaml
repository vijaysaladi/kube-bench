---
controls:
version: "oke-1.0"
id: 5
text: "Managed Services"
type: "managedservices"
groups:
  - id: 5.1
    text: "Image Registry and Image Scanning"
    checks:
      - id: 5.1.1
        text: "Oracle Cloud Security Penetration and Vulnerability Testing (Manual)"
        type: "manual"
        remediation: "No remediation"
        scored: false

      - id: 5.1.2
        text: "Minimize user access control to Container Engine for Kubernetes (Manual)"
        type: "manual"
        remediation: |
          By default, users are not assigned any Kubernetes RBAC roles (or clusterroles) by default. 
          So before attempting to create a new role (or clusterrole), you must be assigned an appropriately 
          privileged role (or clusterrole). A number of such roles and clusterroles are always created 
          by default, including the cluster-admin clusterrole (for a full list, see Default Roles and 
          Role Bindings in the Kubernetes documentation). The cluster-admin clusterrole essentially 
          confers super-user privileges. A user granted the cluster-admin clusterrole can perform any 
          operation across all namespaces in a given cluster. Note that Oracle Cloud Infrastructure 
          tenancy administrators already have sufficient privileges, and do not require the cluster-admin 
          clusterrole. 
        scored: false

      - id: 5.1.3
        text: "Minimize cluster access to read-only (Manual)"
        type: "manual"
        remediation: "No remediation"
        scored: false

      - id: 5.1.4
        text: "Minimize Container Registries to only those approved (Manual)"
        type: "manual"
        remediation: "No remediation"
        scored: false

  - id: 5.2
    text: "Identity and Access Management (IAM)"
    checks:
      - id: 5.2.1
        text: "Prefer using dedicated Service Accounts (Automated)"
        type: "manual"
        remediation: |
          When you create a pod, if you do not specify a service account, it is automatically assigned 
          the default service account in the same namespace. If you get the raw json or yaml for a pod 
          you have created (for example, kubectl get pods/<podname> -o yaml), you can see the 
          spec.serviceAccountName field has been automatically set.
        scored: false

  - id: 5.3
    text: "Cloud Key Management Service (Cloud KMS)"
    checks:
      - id: 5.3.1
        text: "Encrypting Kubernetes Secrets at Rest in Etcd (Manual)"
        type: "manual"
        remediation: "No remediation"
        scored: false

  - id: 5.4
    text: "Cluster Networking"
    checks:
      - id: 5.4.1
        text: "Restrict Access to the Control Plane Endpoint (Automated)"
        type: "manual"
        remediation: |
          Check for the following: 
          
          export OKE_CLUSTERID=<oke cluster id> 
          oci ce cluster get --cluster-id $OKE_CLUSTERID
          
          Check for endpoint URL of the Kubernetes API Server in output
        scored: false

      - id: 5.4.2
        text: "Ensure clusters are created with Private Endpoint Enabled and Public Access Disabled (Manual)"
        type: "manual"
        remediation: "No remediation"
        scored: false

      - id: 5.4.3
        text: "Ensure clusters are created with Private Nodes (Manual)"
        type: "manual"
        remediation: "No remediation"
        scored: false

      - id: 5.4.4
        text: "Ensure Network Policy is Enabled and set as appropriate (Manual)"
        type: "manual"
        remediation: "No remediation"
        scored: false

      - id: 5.4.5
        text: "Encrypt traffic to HTTPS load balancers with TLS certificates (Manual)"
        type: "manual"
        remediation: "No remediation"
        scored: false


  - id: 5.5
    text: "Authentication and Authorization"
    checks:
      - id: 5.5.1
        text: "Access Control and Container Engine for Kubernetes (Manual)"
        type: "manual"
        remediation: "No remediation"
        scored: false
